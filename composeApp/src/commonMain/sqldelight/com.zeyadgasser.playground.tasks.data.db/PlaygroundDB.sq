-- Create the Tasks table
CREATE TABLE IF NOT EXISTS Tasks (
    creationDate TEXT NOT NULL,
    dueDate TEXT NOT NULL,
    encryptedDescription TEXT NOT NULL,
    encryptedTitle TEXT NOT NULL,
    id TEXT PRIMARY KEY NOT NULL,
    image TEXT NOT NULL,
    done INTEGER NOT NULL -- SQLite uses INTEGER for boolean values (0 = false, 1 = true)
);

-- Create the task_dependencies table
CREATE TABLE IF NOT EXISTS task_dependencies (
    taskId TEXT NOT NULL,
    dependencyId TEXT NOT NULL,
    PRIMARY KEY (taskId, dependencyId),
    FOREIGN KEY (taskId) REFERENCES Tasks(id) ON DELETE CASCADE,
    FOREIGN KEY (dependencyId) REFERENCES Tasks(id) ON DELETE CASCADE
);

insertTask:
INSERT OR REPLACE INTO Tasks (
  creationDate,
  dueDate,
  encryptedDescription,
  encryptedTitle,
  id,
  image,
  done
)
VALUES (?, ?, ?, ?, ?, ?, ?);

insertDependency:
INSERT OR REPLACE INTO task_dependencies (taskId, dependencyId)
VALUES (?, ?);

getTaskWithDependencies:
SELECT
  t.*,
  GROUP_CONCAT(d.dependencyId) AS dependencies
FROM Tasks t
LEFT JOIN task_dependencies d ON t.id = d.taskId
WHERE t.id = ?
GROUP BY t.id;

getAllTasksWithDependencies:
SELECT
  t.*,
  GROUP_CONCAT(d.dependencyId) AS dependencies
FROM Tasks t
LEFT JOIN task_dependencies d ON t.id = d.taskId
GROUP BY t.id;
